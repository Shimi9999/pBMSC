<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAAAAEAIACoEAAANgAAABgYAAABACAAiAkAAN4QAAAQEAAAAQAgAGgEAABmGgAAKAAAACAA
        AABAAAAAAQAgAAAAAACAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAPDg4BCQkJBQICAggDAwMHCQkJAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKCcnARAPDwgBAQETCAgIHwAAABYHBwcLGBgYAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADU0NAEfHx8IMjAwcmhmZuh2dHX7TEpKug4NDSYqKSkEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMTAwBj07O46Jh4f/kJCR/6CgoP/BwMD/RkREqkFB
        QQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs6OgQ1NDRlh4WF/4iIiP+VlZb/0tLU/9nZ
        2f90cnLvb21tAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPn5
        +QH5+fkD+fn5AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDQkICLSwsPHp4ePaQkJD/lZWW/9LS
        1P/R0dH/uLi4/21qassAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC4uLgB09PTBe3t7Qjs7OwHz8/PAwAAAAAAAAAAAAAAAAAAAAAAAAAARUREASsqKh5saWnglpaW/5WV
        lv/S0tT/0dHR/7a2tv+Ni4v+fHp6SwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAUFBQAYaGhgXV1dUO3d3dFNzc3BPDw8MMfHx8BE1NTQEAAAAAAAAAADs5OQEuLS4LW1hYvpmY
        mP+Xl5j/0tLU/9HR0v+4t7f/i4iI/HVzc3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACoqKgQ0NDQNV1dXGXt7eyiNjY0yioqKMXNzcyVMTEwXLi4uDB4eHgQoKCgBMC8vBUtJ
        SZGVlJT/m5uc/9LS1P/S0tP/trW1/3x6efCDgYFGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADExMQMODg4MJCQlRU5OTpljY2TRZmZn8WRkZfliYmLwYGBg0VBQUZkqKipGBgYGFgoK
        CgxAPj5fjYuL/6OjpP/S0tT/1tbW/6+urv92c3PXi4iIIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA3NzgFIyMjOGNjZMJ0dHX+jY2N8LKxr+HIxsTczszJ3cXDweCpqKbme3p681tb
        XP5ISEm7KSkpYHBsbPWenJ3/0tLT/9ra2v+joqL/eXZ2sZKQkA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAASUlJBT4+PmZ9fX73nJua7OHd18r89erA/fXoxP326sv+9+3S/vju1f34
        79H9+O/K19TP0X59ffBaWlv/dnN0/56amv/Lysr/lpSU/n99fYGUkpIDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5eXwJMTE1ohISG/b68udv68+W//fHbv/7u08D+7tTE/vHczP71
        5tb+9+vd/vfr3P726NT99ejK+/Xrw6SioOFaWlv/hoOD/3ZycvRua2tUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVFRUOoiIivnCwLza+vHev/3tzL/+6cC//unBwP7s
        y8P+8NjN/vXm2f/47uT/+fHn/vjt4f715tX+9OTK/fbrw6WjoeFaWlv/Li0uZCQkJAoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG9vcAR/f4DOqqin6Pbu3MD968W//uWzv/7m
        tb/+57u//urFwv7v08v+9OPZ//nw5//79e//+/Xt/vju5P715tb+9OTK+/XrxIGAgO9MTE3DFRUVFjo5
        OgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdHR1TY+Pkfzf2s/I/OvGv/7k
        q7/+46i//uSvv/7mtb/+6L3B/uzLyP7y3dX/+O3l//v28f/8+fT/+/Xu/vju4v705dX99efK3NjT0Fxc
        Xf48PD1RTU1NDF1dXQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACKioupoqGg6u/k
        y8H+5a6//t+cv/7hor/+46i//uSvv/7mtsD+6sHE/u/Szv715N3/+fHr//z38v/79/D/+fLp/vfr3v71
        59P9+O7LgIB/8lpaW6Z3d3cYkZGSBrGxsQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjY2OAY2N
        j+i0sazZ8OC7wf7gmr/+3pW//t+cv/7hor/+46i//uSvv/7nuMH+68XG/vDW0f715d3/+O7n//ry6v/5
        8Of/9+zg/vXn1/737dCwr6zkYGBg3YmJiSTW1tYLubm5AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACLi4wSj4+R/766sM7s2azC/9yPv//cjr/+3pW//t+cv/7hor/+46i//uSvv/7nucL+68XH/u/Uz/7z
        39f+9ebc/vbo3f726Nr+9OXV/vbr0c3Kx9xhYWH7iYmJK+fn5w25ubkE8/PzAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAI6OkB+Pj5H/wLuwyOXRocP/2oe//9qIv//cjr/+3pW//t+cv/7hor/+46i//uSvv/7n
        uMH+6sLF/u3Nyf7w1s3+8dvQ/vLd0P7y387+9efM2NXQ1mNjZP94eHgszc3OC7CwsAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjo6PFY+Pkf+8t63K38udxPjUf8D/2IG//9qIv//cjr/+3pW//t+cv/7h
        or/+46i//uSvv/7mtsD+6b7C/uvGw/7szcX+7tHG/u/Wxv3z48XRzsnVZmZn/VdXVxp+fn4FnJycAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACOjo8Bjo6Q8bKvqdXayZ/F6sh5wv7Xe7//2IG//9qIv//c
        jr/+3pW//t+cv/7hor/+46i//uSvv/7mtb/+6LvA/unCwP7ryMH+7M7B/fPiwLq3tNtnZ2jhMTExDgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACOjY+2oqGf4tHEpsfixYHE9M1xwf/X
        e7//2IG//9qIv//cjr/+3pW//t+cv/7hor/+46i//uSvv/7mtb/+57q//unAv/7szb/68uO/l5aV61FR
        Uqw3NzcGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJGRkl6RkZL3w7ytyNzH
        k8XlwG/D989ywP/Xe7//2IG//9qIv//cjr/+3pW//t+cv/7hor/+46i//uSvv/7mtb/+6Ly//e/Uv+bh
        2Md2dnf9MjIzV0ZGRwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlJSUBo+P
        keGmpKHezsGkyODFhsTlv2rD9M1xwf/Xe7//2IG//9qIv//cjr/+3pW//t+cv/7hor/+46i//uSwv/3q
        xb/z6dfBoaCe521tbtY8OzsJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAkpKST4+Pkfu1sanR0MGgx9/EhcTkv23E7MVtwvfQd8D914G//9qIv//cjr/+3pW//d6bv/jd
        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
        AAAAAQAAAAMAAAADAACABwAAgA8AAOAfAAA=
</value>
  </data>
</root>